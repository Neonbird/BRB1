install.packages("DAAG")
data <- mtcars
library("ggplot2")
ggplot(data, aes(mpg, hp))+
geom_boxplot()
ggplot(data, aes(mpg, hp))+
geom_density()
ggplot(data, aes(x = mpg, y = hp))+
geom_density()
?geom_density
ggplot(data, aes(hs))+
geom_density()
ggplot(data, aes(hs))+
geom_density()
ggplot(data, aes(hp))+
geom_density()
?geom_smooth
ggplot(data, aes(mpg,hp))+
geom_smooth()
ggplot(data, aes(mpg,hp))+
geom_bar()
ggplot(data, aes(mpg))+
geom_bar()
ggplot(data, aes(mpg))+
geom_pointrange()
ggplot(data, aes(mpg, hp))+
geom_pointrange()
ggplot(data, aes(x=mpg, y = hp, ymin = 10, ymax = 200))+
geom_pointrange()
?geom_bar
ggplot(data, aes(x=mpg, y = hp))+
geom_bar()
ggplot(data, aes(x=mpg))+
geom_bar()
?geom_pointrange
log(10)
test <- data.frame("Var1" = rnorm(30), "Var2" = rnorm(30))
View(test)
mean(test1)
test1 <- data.frame("Var1" = c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10), "Var2" = c(1, 3, 5, 7, 9, 11, 13, 15, 17, 19))
mean(test1)
View(test1)
str(test1)
mean(test1[,1])
mean(test1$Var1)
apply(test, 2, +1)
apply(test, 2, mean)
apply(test1, 2, mean)
mean(test1[,1])
test[[1]]
test[[2]]
test1[[2]]
test1[,1] - mean(test1[,1])
(test1[,1] - mean(test1[,1])) * test1[,2] - mean(test1[,2])
sum((test1[,1] - mean(test1[,1])) * test1[,2] - mean(test1[,2]))
test1[,2] - mean(test1[,2]
test1[,2] - mean(test1[,2])
sum((test1[,1] - mean(test1[,1])) * (test1[,2] - mean(test1[,2]))
sum((test1[,1] - mean(test1[,1])) * (test1[,2] - mean(test1[,2])))
cor.test(test1)
cor.test(test1$Var1, test1$Var2)
cor.test(test$Var1, test$Var2)
covariation = sum((test1[,1] - mean(test1[,1])) * (test1[,2] - mean(test1[,2])))/nrow(test1)
nrow(test1)
sqrt(sum((test1[,1] - mean(test[,1]))^2)/nrow(test1))
mean(test[,1])
mean(test[,1]
mean(test[,1])
mean(test[,1])
mean(test1[,1])
sqrt(sum((test1[,1] - mean(test1[,1]))^2)/nrow(test1))
sqrt(sum((test1[,1] - mean(test1[,1])^2)/nrow(test1)))
sqrt(sum((test1[,1] - mean(test1[,1]))^2)/nrow(test1)))
sqrt(sum((test1[,1] - mean(test1[,1]))^2)/nrow(test1))
sqrt(sum((test1[,1] - mean(test1[,1])))/nrow(test1))
sqrt(sum((test1[,1] - mean(test1[,1])))/(nrow(test1)-1)
sqrt(sum((test1[,1] - mean(test1[,1])))/(nrow(test1)-1))
(test1[,1] - mean(test1[,1]))
(test1[,1] - mean(test1[,1]))^2
sum((test1[,1] - mean(test1[,1]))^2)
sum((test1[,1] - mean(test1[,1]))^2)/nrow(test1)
sum((test1[,1] - mean(test1[,1]))^2)/(nrow(test1) - 1)
sqrt(sum((test1[,1] - mean(test1[,1]))^2)/(nrow(test1) - 1))
test1[,1] - mean(test1[,1]
test1[,1] - mean(test1[,1])
test1[,1] - mean(test1[,1])
(test1[,1] - mean(test1[,1]))^2
sum((test1[,1] - mean(test1[,1]))
pearson_correlation <- function(df){
sd1 =sqrt(sum((df[,1] - mean(df[,1]))^2)/(nrow(df) - 1))
sd1 =sqrt(sum((df[,2] - mean(df[,2]))^2)/(nrow(df) - 1))
covariation = sum((df[,1] - mean(df[,1])) * (df[,2] - mean(df[,2])))/nrow(df)
correlation = covariation/(sd1*sd2)
return(correlation)
}
return(correlation)}
pearson_correlation <- function(df){
sd1 =sqrt(sum((df[,1] - mean(df[,1]))^2)/(nrow(df) - 1))
sd1 =sqrt(sum((df[,2] - mean(df[,2]))^2)/(nrow(df) - 1))
covariation = sum((df[,1] - mean(df[,1])) * (df[,2] - mean(df[,2])))/nrow(df)
correlation = covariation/(sd1*sd2)
return(correlation)
}
pearson_correlation <- function(df){
sd1 =sqrt(sum((df[,1] - mean(df[,1]))^2)/(nrow(df) - 1))
sd1 =sqrt(sum((df[,2] - mean(df[,2]))^2)/(nrow(df) - 1))
covariation = sum((df[,1] - mean(df[,1])) * (df[,2] - mean(df[,2])))/nrow(df)
correlation = covariation/(sd1*sd2)
return(correlation)
}
pearson_correlation(test1)
pearson_correlation <- function(df){
sd1 =sqrt(sum((df[,1] - mean(df[,1]))^2)/(nrow(df) - 1))
sd2 =sqrt(sum((df[,2] - mean(df[,2]))^2)/(nrow(df) - 1))
covariation = sum((df[,1] - mean(df[,1])) * (df[,2] - mean(df[,2])))/nrow(df)
correlation = covariation/(sd1*sd2)
return(correlation)
}
pearson_correlation(test1)
pearson_correlation(test1)
cor.test(test1$Var1, test1$Var2)
pearson_correlation <- function(df){
sd1 =sqrt(sum((df[,1] - mean(df[,1]))^2)/(nrow(df) - 1))
sd2 =sqrt(sum((df[,2] - mean(df[,2]))^2)/(nrow(df) - 1))
covariation = sum((df[,1] - mean(df[,1])) * (df[,2] - mean(df[,2])))/(nrow(df) - 1)
correlation = covariation/(sd1*sd2)
return(correlation)
}
pearson_correlation(test1)
cor.test(test1$Var1, test1$Var2)
pearson_correlation(test)
cor.test(test1$Var1, test1$Var2)
cor.test(test$Var1, test$Var2)
pearson_correlation(test)
cor.test(test$Var1, test$Var2)
sort(test1)
sort(test1[,1])
sort(test[,1])
# Коэффициент корреляции Спирмена
sort(test1)
# Коэффициент корреляции Спирмена
sort(test1[,])
seq(1, nrow(test1))
rbind(sort(test1[,1]), seq(1, nrow(test1)))
values_ranks <- rbind(sort(test1[,1]), seq(1, nrow(test1)))
str(values_ranks)
values_ranks <- rbind(sort(test[,1]), seq(1, nrow(test)))
str(values_ranks)
values_ranks[1]
values_ranks[2]
View(values_ranks)
rank(test1[,1])
rank(test[,1])
abs(5-19)
abs(rank(test1[,1]) - rank(test1[, 2])
abs(rank(test1[,1]) - rank(test1[, 2]))
rank(test1[, 2])
rank(test1[,1])
rank(test1[,1]) - rank(test1[, 2])
abs(0)
abs(rank(test1[,1]) - rank(test1[, 2]))
abs(rank(test1[,1]) - rank(test1[, 2]))
abs(rank(test[,1]) - rank(test[, 2]))
abs(rank(test[,1]) - rank(test[, 2]))^2
spearman_correlation <- function(df){
n = nrow(df)
var1_ranks <- rank(df[,1])
var2_ranks <- rank(df[,2])
d2_sum = sum(abs(var1_ranks - var2_ranks)^2)
correlation = 1 - ((6*d2_sum)/(n*(n^2-1)))
return(correlation)
}
spearman_correlation(test1)
spearman_correlation(test)
school_data <- data.frame("English" = c(56, 75, 45, 71, 62, 64, 58, 80, 76, 61),
"Math" = c(66, 70, 40, 60, 65, 56, 59, 77, 67, 63))
spearman_correlation(school_data)
cor.test(school_data, method = "spearman")
cor.test(school_data$English, school_data$Math, method = "spearman")
my_corr_test <- function(df, method="pearson"){
n = nrow(df)
if(method == "spearman"){
var1_ranks <- rank(df[,1])
var2_ranks <- rank(df[,2])
d2_sum = sum(abs(var1_ranks - var2_ranks)^2)
correlation = 1 - ((6*d2_sum)/(n*(n^2-1)))
}
else{
sd1 =sqrt(sum((df[,1] - mean(df[,1]))^2)/(nrow(df) - 1))
sd2 =sqrt(sum((df[,2] - mean(df[,2]))^2)/(nrow(df) - 1))
covariation = sum((df[,1] - mean(df[,1])) * (df[,2] - mean(df[,2])))/(nrow(df) - 1)
correlation = covariation/(sd1*sd2)
}
return(correlation)
}
my_corr_test(school_data)
my_corr_test(school_data, method="spearman")
cor.test(school_data$English, school_data$Math)
cor.test(school_data$English, school_data$Math, method="spearman")
rank?
?rank()
?rank
test_one <- c(1, 2, 3, 3, 3, 4, 5, 6)
rank(test_one)
school_data_2 <- data.frame("English" = c(56, 75, 45, 71, 62, 64, 58, 80, 76, 61),
"Math" = c(66, 70, 40, 60, 60, 60, 60, 77, 67, 63))
cor.test(school_data_2$English, school_data_2$Math, method="spearman")
cor.test(school_data_2$English, school_data_2$Math, method="spearman")
cor.test(school_data_2$English, school_data_2$Math, method="spearman")
cor.test(school_data_2$English, school_data_2$Math, method="spearman")
cor.test(school_data_2$English, school_data_2$Math, method = "spearman")
school_data_2 <- data.frame("English" = c(56, 75, 45, 71, 62, 64, 58, 80, 76, 61),
"Math" = c(66, 70, 40, 60, 60, 60, 60, 60, 67, 63))
cor.test(school_data_2$English, school_data_2$Math, method = "spearman")
cor.test(school_data_2, method = "spearman")
my_corr_test(school_data_2, method = "spearman")
rank(school_data_2$Math)
rank(school_data_2$Math, method="first")
rank(school_data_2$Math, ties.method ="first")
rank(school_data_2$Math, ties.method ="last")
rank(school_data_2$Math, ties.method ="max")
rank(school_data_2$Math, ties.method ="min")
my_corr_test <- function(df, method="pearson"){
n = nrow(df)
if(method == "spearman"){
var1_ranks <- rank(df[,1], ties.method = "min")
var2_ranks <- rank(df[,2], ties.method = "min")
d2_sum = sum(abs(var1_ranks - var2_ranks)^2)
correlation = 1 - ((6*d2_sum)/(n*(n^2-1)))
}
else{
sd1 =sqrt(sum((df[,1] - mean(df[,1]))^2)/(n - 1))
sd2 =sqrt(sum((df[,2] - mean(df[,2]))^2)/(n - 1))
covariation = sum((df[,1] - mean(df[,1])) * (df[,2] - mean(df[,2])))/(n - 1)
correlation = covariation/(sd1*sd2)
}
return(correlation)
}
my_corr_test(school_data, method="spearman")
my_corr_test(school_data_2, method = "spearman")
my_corr_test <- function(df, method="pearson"){
n = nrow(df)
if(method == "spearman"){
var1_ranks <- rank(df[,1], ties.method = "max")
var2_ranks <- rank(df[,2], ties.method = "max")
d2_sum = sum(abs(var1_ranks - var2_ranks)^2)
correlation = 1 - ((6*d2_sum)/(n*(n^2-1)))
}
else{
sd1 =sqrt(sum((df[,1] - mean(df[,1]))^2)/(n - 1))
sd2 =sqrt(sum((df[,2] - mean(df[,2]))^2)/(n - 1))
covariation = sum((df[,1] - mean(df[,1])) * (df[,2] - mean(df[,2])))/(n - 1)
correlation = covariation/(sd1*sd2)
}
return(correlation)
}
my_corr_test(school_data_2, method = "spearman")
cor.test(school_data_2$English, school_data_2$Math, method = "spearman")
my_corr_test <- function(df, method="pearson"){
n = nrow(df)
if(method == "spearman"){
var1_ranks <- rank(df[,1], ties.method = "average")
var2_ranks <- rank(df[,2], ties.method = "average")
d2_sum = sum(abs(var1_ranks - var2_ranks)^2)
correlation = 1 - ((6*d2_sum)/(n*(n^2-1)))
}
else{
sd1 =sqrt(sum((df[,1] - mean(df[,1]))^2)/(n - 1))
sd2 =sqrt(sum((df[,2] - mean(df[,2]))^2)/(n - 1))
covariation = sum((df[,1] - mean(df[,1])) * (df[,2] - mean(df[,2])))/(n - 1)
correlation = covariation/(sd1*sd2)
}
return(correlation)
}
cor.test(school_data_2$English, school_data_2$Math, method = "spearman")
my_corr_test(school_data_2, method = "spearman")
my_corr_test <- function(df, method="pearson"){
n = nrow(df)
if(method == "spearman"){
var1_ranks <- rank(df[,1], ties.method = "last")
var2_ranks <- rank(df[,2], ties.method = "last")
d2_sum = sum(abs(var1_ranks - var2_ranks)^2)
correlation = 1 - ((6*d2_sum)/(n*(n^2-1)))
}
else{
sd1 =sqrt(sum((df[,1] - mean(df[,1]))^2)/(n - 1))
sd2 =sqrt(sum((df[,2] - mean(df[,2]))^2)/(n - 1))
covariation = sum((df[,1] - mean(df[,1])) * (df[,2] - mean(df[,2])))/(n - 1)
correlation = covariation/(sd1*sd2)
}
return(correlation)
}
my_corr_test(school_data_2, method = "spearman")
my_corr_test <- function(df, method="pearson"){
n = nrow(df)
if(method == "spearman"){
var1_ranks <- rank(df[,1], ties.method = "random")
var2_ranks <- rank(df[,2], ties.method = "random")
d2_sum = sum(abs(var1_ranks - var2_ranks)^2)
correlation = 1 - ((6*d2_sum)/(n*(n^2-1)))
}
else{
sd1 =sqrt(sum((df[,1] - mean(df[,1]))^2)/(n - 1))
sd2 =sqrt(sum((df[,2] - mean(df[,2]))^2)/(n - 1))
covariation = sum((df[,1] - mean(df[,1])) * (df[,2] - mean(df[,2])))/(n - 1)
correlation = covariation/(sd1*sd2)
}
return(correlation)
}
my_corr_test(school_data_2, method = "spearman")
my_corr_test(school_data_2, method = "spearman")
my_corr_test(school_data_2, method = "spearman")
my_corr_test(school_data_2, method = "spearman")
my_corr_test(school_data_2, method = "spearman")
my_corr_test(school_data_2, method = "spearman")
my_corr_test <- function(df, method="pearson"){
n = nrow(df)
if(method == "spearman"){
var1_ranks <- rank(df[,1], ties.method = "max")
var2_ranks <- rank(df[,2], ties.method = "max")
d2_sum = sum(abs(var1_ranks - var2_ranks)^2)
correlation = 1 - ((6*d2_sum)/(n*(n^2-1)))
}
else{
sd1 =sqrt(sum((df[,1] - mean(df[,1]))^2)/(n - 1))
sd2 =sqrt(sum((df[,2] - mean(df[,2]))^2)/(n - 1))
covariation = sum((df[,1] - mean(df[,1])) * (df[,2] - mean(df[,2])))/(n - 1)
correlation = covariation/(sd1*sd2)
}
return(correlation)
}
my_corr_test(school_data_2, method = "spearman")
my_corr_test(school_data_2, method = "spearman")
my_corr_test <- function(df, method="pearson"){
n = nrow(df)
if(method == "spearman"){
var1_ranks <- rank(df[,1], ties.method = "min")
var2_ranks <- rank(df[,2], ties.method = "min")
d2_sum = sum(abs(var1_ranks - var2_ranks)^2)
correlation = 1 - ((6*d2_sum)/(n*(n^2-1)))
}
else{
sd1 =sqrt(sum((df[,1] - mean(df[,1]))^2)/(n - 1))
sd2 =sqrt(sum((df[,2] - mean(df[,2]))^2)/(n - 1))
covariation = sum((df[,1] - mean(df[,1])) * (df[,2] - mean(df[,2])))/(n - 1)
correlation = covariation/(sd1*sd2)
}
return(correlation)
}
my_corr_test(school_data_2, method = "spearman")
rank(1, 2, 3, 3, 3, 4)
rank(c(1, 2, 3, 3, 3, 4))
rank(c(1, 2, 3, 3, 3, 4), ties.method = "first")
rank(c(1, 2, 3, 3, 3, 4), ties.method = "max")
rank(c(1, 2, 3, 3, 3, 4), ties.method = "min")
rank(c(1, 2, 3, 3, 3, 4), ties.method = "last")
test123 = c(1, 2, 3, 3, 3, 4)
sum(test123 == 3)
for (i in test123){
print(i)
}
install.packages("knitr")
install.packages("kableExtra")
gene_sets <- data.frame(c('Pascal', "Sqrt", "Abs"), c(92, 100, 100, 11), c(7, 2, 2, 0), c(8, 3, 1, 1))
gene_sets <- data.frame(c(92, 100, 100, 11), c(7, 2, 2, 0), c(8, 3, 1, 1))
colnames(gene_sets) <- c('Pascal', "Sqrt", "Abs")
gene_sets
library(ggplot2)
gene_sets <- data.frame(c("top100", "top50", "top25", "top10"),c(92, 100, 100, 11), c(7, 2, 2, 0), c(8, 3, 1, 1))
row.names(gene_sets) <- c('Pascal', "Sqrt", "Abs")
gene_sets
gene_sets <- data.frame(c("top100", "top50", "top25", "top10"),c(92, 100, 100, 11), c(7, 2, 2, 0), c(8, 3, 1, 1))
gene_sets
gene_sets <- data.frame(c(92, 100, 100, 11), c(7, 2, 2, 0), c(8, 3, 1, 1))
row.nrow(gene_sets) <- c('Pascal', "Sqrt", "Abs")
gene_sets <- data.frame(c(92, 100, 100, 11), c(7, 2, 2, 0), c(8, 3, 1, 1))
col_names(gene_sets) <- c("top100", "top50", "top25", "top10")
gene_sets <- data.frame(c(92, 100, 100, 11), c(7, 2, 2, 0), c(8, 3, 1, 1))
colnames(gene_sets) <- c("top100", "top50", "top25", "top10")
gene_sets <- data.frame(c(92, 100, 100, 11), c(7, 2, 2, 0), c(8, 3, 1, 1))
gene_sets
colnames(gene_sets) <- c('Pascal', "Sqrt", "Abs")
gene_sets
gene_sets <- data.frame(c("top100", "top50", "top25", "top10"), c(92, 100, 100, 11), c(7, 2, 2, 0), c(8, 3, 1, 1))
gene_sets
colnames(gene_sets) <-
colnames(gene_sets) <- c "Top_n','Pascal', "Sqrt", "Abs")
gene_sets
ggplot(gene_sets, aes(x = ))
colnames(gene_sets) <-
colnames(gene_sets) <- c "Top_n",'Pascal', "Sqrt", "Abs")
colnames(gene_sets) <-
colnames(gene_sets) <- c("Top_n",'Pascal', "Sqrt", "Abs")
gene_sets
gene_sets <- data.frame(c("top100", "top50", "top25", "top10"), c("Pascal",92, 100, 100, 11), c("Sqrt",7, 2, 2, 0), c("Abs",8, 3, 1, 1))
gene_sets <- data.frame(, c("Pascal",92, 100, 100, 11), c("Sqrt",7, 2, 2, 0), c("Abs",8, 3, 1, 1))
gene_sets <- data.frame(c("Pascal",92, 100, 100, 11), c("Sqrt",7, 2, 2, 0), c("Abs",8, 3, 1, 1))
gene_sets
gene_sets_1 <- data.frame(c(92, 7, 8), c(100, 2, 3), c(100, 2, 1), c(11, 0, 1))
gene_sets
gene_sets_1
,
gene_sets <- data.frame(c("Pascal", "top_100", 92), c("Pascal", "top_50", 10),
c("Pascal", "top_25", 100), c("Pascal", "top_10", 11),
c("Sqrt", "top_100", 7), c("Sqrt", "top_50", 2),
c("Sqrt", "top_25", 2), c("Sqrt", "top_10", 0),
c("Abs", "top_100", 8), c("Abs", "top_50", 3),
c("Abs", "top_25", 1), c("Abs", "top_10", 1))
gene_sets
View(gene_sets)
View(gene_sets_1)
View(gene_sets)
View(gene_sets_1)
View(gene_sets)
gene_sets_2 <- data.frame(c("Pascal", "Pascal", "Pascal", "Pascal",
"Sqrt", "Sqrt", "Sqrt", "Sqrt", "Abs", "Abs", "Abs", "Abs"),
c(92, 100, 100, 11, 7, 2, 2, 0, 8, 3, 1, 1),
c("top100", "top50", "top25", "top10",
"top100", "top50", "top25", "top10",
"top100", "top50", "top25", "top10",
"top100", "top50", "top25", "top10"))
gene_sets_2 <- data.frame(c("Pascal", "Pascal", "Pascal", "Pascal",
"Sqrt", "Sqrt", "Sqrt", "Sqrt", "Abs", "Abs", "Abs", "Abs"),
c(92, 100, 100, 11, 7, 2, 2, 0, 8, 3, 1, 1),
c("top100", "top50", "top25", "top10",
"top100", "top50", "top25", "top10",
"top100", "top50", "top25", "top10"))
gene_sets_2
View(gene_sets_2)
gene_sets_2 <- data.frame(c("Pascal", "Pascal", "Pascal", "Pascal",
"Sqrt", "Sqrt", "Sqrt", "Sqrt", "Abs", "Abs", "Abs", "Abs"),
c("top100", "top50", "top25", "top10",
"top100", "top50", "top25", "top10",
"top100", "top50", "top25", "top10"),
c(92, 100, 100, 11, 7, 2, 2, 0, 8, 3, 1, 1))
View(gene_sets_2)
colnames(gene_sets_2) <- c("Method", "Top_n", "Gene_sets")
ggplot(gene_sets, aes(x = "Gene_sets"))
ggplot(gene_sets_2, aes(x = "Gene_sets"))
gene_sets_2 <- data.frame(c("Pascal", "Pascal", "Pascal", "Pascal",
"Sqrt", "Sqrt", "Sqrt", "Sqrt", "Abs", "Abs", "Abs", "Abs"),
c(100, 50, 20, 10, 100, 50, 20, 10, 100, 50, 20, 10),
c(92, 100, 100, 11, 7, 2, 2, 0, 8, 3, 1, 1))
colnames(gene_sets_2) <- c("Method", "Top_n", "Gene_sets")
ggplot(gene_sets_2, aes(x = "Gene_sets"))
ggplot(gene_sets_2, aes(x = "Gene_sets", y = "Top_n"))
ggplot(gene_sets_2, aes(x = "Gene_sets", y = "Top_n"))+
geom_point()
str(gene_sets_2)
View(gene_sets_2)
ggplot(gene_sets_2, aes(x = Gene_sets, y = Top_n))+
geom_point()
ggplot(gene_sets_2, aes(x = Gene_sets, y = Top_n))+
geom_point(aes(label = Method))
ggplot(gene_sets_2, aes(x = Gene_sets, y = Top_n))+
geom_point(aes(shape = Method))
ggplot(gene_sets_2, aes(x = Gene_sets, y = Top_n, color = Top_n))+
geom_point(aes(shape = Method))+
geom_line()
library(RColorBrewer)
ggplot(gene_sets_2, aes(x = Gene_sets, y = Top_n, color = Top_n))+
geom_point(aes(shape = Method))+
geom_line()+
theme_bw()
ggplot(gene_sets_2, aes(x = Gene_sets, y = Top_n, color = Top_n))+
geom_point(aes(shape = Method))+
geom_line(color = Top_n)+
theme_bw()
geom_line(aes(color = Top_n)+
facet_grid(~Method)
facet_grid(.Method)
facet_grid(Method)
facet_grid(Method~)
facet_grid()
facet_grid(~Method)
facet_grid(~Method)
facet_grid(Method)
facet_grid(. ~Method)
facet_grid(. ~ Method)
facet_grid(Method ~ .)
geom_line()
2 + 3
ggplot(gene_sets_2, aes(Gene_sets, Top_n))+
geom_line()
ggplot(gene_sets_2, aes(Gene_sets, Top_n))+
geom_line()+
facet_grid(. ~ Method)
install.packages("plyr")
ggplot(gene_sets_2, aes(Gene_sets, Top_n))+
geom_line()+
facet_grid(. ~ Method)
ggplot(gene_sets_2, aes(Gene_sets, Top_n))+
geom_line()+
facet_grid(Method ~ .)
ggplot(gene_sets_2, aes(Gene_sets, Top_n, color = Method))+
geom_point()+
geom_line()+
facet_grid(Method ~ .)
ggplot(gene_sets_2, aes(Gene_sets, Top_n, color = Method))+
geom_point()+
geom_line()
ggplot(gene_sets_2, aes(Gene_sets, Top_n, color = Method))+
geom_point()+
geom_line()+
facet_grid(Method ~ .)
getwd()
setwd("/home/mikhail/Desktop/BI_2019/project/new_method/new_method/data/enrichment/20002_1094")
getwd()
ggplot(gene_sets_2, aes(Top_n, Gene_sets, color = Method))+
geom_point()+
geom_line()+
facet_grid(Method ~ .)
